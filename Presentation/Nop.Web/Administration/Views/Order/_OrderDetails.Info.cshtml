@model OrderModel

@using Nop.Core.Domain.Tax;
@using Nop.Core.Domain.Pedidos;
@using Nop.Services
@if (!Model.IsLoggedInAsVendor)
{
    <script type="text/javascript">
        $(document).ready(function () {
            toggleChangePedidostatus(false);
            toggleOrderTotals(false);
            toggleCC(false);
        });

        function toggleChangePedidostatus(editmode) {
            if (editmode) {
                $('#pnlChangePedidostatus').show();
                $('#btnChangePedidostatus').hide();
            } else {
                $('#pnlChangePedidostatus').hide();
                $('#btnChangePedidostatus').show();
            }
        }

        function toggleOrderTotals(editmode) {
            if (editmode) {
                $('#trEditOrderTotals').show();
                $('#btnEditOrderTotals').hide();
                $('#btnSaveOrderTotals').show();
                $('#btnCancelOrderTotals').show();
            } else {
                $('#trEditOrderTotals').hide();
                $('#btnEditOrderTotals').show();
                $('#btnSaveOrderTotals').hide();
                $('#btnCancelOrderTotals').hide();
            }
        }

        function toggleCC(editmode) {
            if (editmode) {
                $('#lblCardType').hide();
                $('#@Html.FieldIdFor(model => model.CardType)').show();
                $('#lblCardName').hide();
                $('#@Html.FieldIdFor(model => model.CardName)').show();
                $('#lblCardNumber').hide();
                $('#@Html.FieldIdFor(model => model.CardNumber)').show();
                $('#lblCardCvv2').hide();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').show();
                $('#lblCardExpirationMonth').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').show();
                $('#lblCardExpirationYear').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').show();
                $('#btnEditCC').hide();
                $('#btnSaveCC').show();
                $('#btnCancelCC').show();
            } else {
                $('#lblCardType').show();
                $('#@Html.FieldIdFor(model => model.CardType)').hide();
                $('#lblCardName').show();
                $('#@Html.FieldIdFor(model => model.CardName)').hide();
                $('#lblCardNumber').show();
                $('#@Html.FieldIdFor(model => model.CardNumber)').hide();
                $('#lblCardCvv2').show();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').hide();
                $('#lblCardExpirationMonth').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').hide();
                $('#lblCardExpirationYear').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').hide();
                $('#btnEditCC').show();
                $('#btnSaveCC').hide();
                $('#btnCancelCC').hide();
            }
        }
    </script>
}
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            @if (!Model.IsLoggedInAsVendor)
            {
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Pedidostatus)
                    </div>
                    <div class="col-md-9">
                        <div class="input-group input-group-short">
                            <div class="input-group-text">
                                <strong>
                                    @Html.NopDisplayFor(model => model.Pedidostatus)
                                </strong>
                            </div>
                            <div class="input-group-btn">
                                @if (Model.CanCancelOrder)
                                {
                                    <button type="submit" name="cancelorder" id="cancelorder" class="btn bg-red" style="margin-right: 3px;">
                                        @T("Admin.Pedidos.Fields.Pedidostatus.Cancel")
                                    </button>
                                    @Html.ActionConfirmation("cancelorder")
                                }
                                <button type="submit" name="btnChangePedidostatus" onclick="toggleChangePedidostatus(true);return false;" id="btnChangePedidostatus" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.Pedidostatus.Change")
                                </button>
                                <div id="pnlChangePedidostatus" style="margin-top: 3px;">
                                    @Html.NopDropDownListFor(model => model.PedidostatusId, ((Pedidostatus) Model.PedidostatusId).ToSelectList())
                                    <button type="submit" name="btnSavePedidostatus" id="btnSavePedidostatus" class="btn btn-primary" style="margin-left: 3px">
                                        @T("Admin.Common.Save")
                                    </button>
                                    @Html.ActionConfirmation("btnSavePedidostatus")
                                    <button type="submit" name="btnCancelPedidostatus" onclick="toggleChangePedidostatus(false);return false;" id="btnCancelPedidostatus" class="btn bg-teal" style="margin-left: 3px">
                                        @T("Admin.Common.Cancel")
                                    </button>
                                    <div class="input-group-btn-hint">
                                        <em>@T("Admin.Pedidos.Fields.Pedidostatus.Change.ForAdvancedUsers")</em>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                //vendors should see whether or order is cancelled
                if (Model.PedidostatusId == (int)Pedidostatus.Cancelled)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            &nbsp;
                        </div>
                        <div class="col-md-9">
                            <strong>
                                @T("Admin.Pedidos.Fields.Pedidostatus.CancelledNotification")
                            </strong>
                        </div>
                    </div>
                }
            }
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomOrderNumber)
                </div>
                <div class="col-md-9">
                    @Html.NopDisplayFor(model => model.CustomOrderNumber)
                </div>
            </div>           
            @if (!Model.IsLoggedInAsVendor)
            {
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.OrderGuid)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDisplayFor(model => model.OrderGuid)
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.StoreName)
                </div>
                <div class="col-md-9">
                    @Html.NopDisplayFor(model => model.StoreName)
                </div>
            </div>
        </div>
    </div>

    @if (!Model.IsLoggedInAsVendor)
    {
    <div class="panel panel-default">
        <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CustomerId)
                    </div>
                    <div class="col-md-9">
                        @Html.ActionLink(Model.CustomerInfo, "Edit", "Customer", new { id = Model.CustomerId }, new { })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CustomerIp)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDisplayFor(model => model.CustomerIp)
                    </div>
                </div>
                @if (Model.RecurringPaymentId > 0)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.RecurringPaymentId)
                        </div>
                        <div class="col-md-9">
                            <a href="@Url.Action("Edit", "RecurringPayment", new {id = Model.RecurringPaymentId})">@T("Admin.Common.View")</a>
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.VatNumber))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.VatNumber)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.VatNumber)
                        </div>
                    </div>
                }
                @if (Model.AffiliateId > 0)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.AffiliateId)
                        </div>
                        <div class="col-md-9">
                            <a href="@Url.Action("Edit", "Affiliate", new {id = Model.AffiliateId})">@Model.AffiliateName - @T("Admin.Common.View")</a>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-3">
                        <div class="label-wrapper">
                            <label class="control-label">@T("Admin.Pedidos.Fields.Pedidosubtotal")</label>
                            <div class="ico-help" title="@T("Admin.Pedidos.Fields.Pedidosubtotal.Hint")">
                                <i class="fa fa-question-circle"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="row">
                            @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                            {
                                <div class="col-md-2">
                                    <div class="form-text-row">
                                        @Html.DisplayFor(model => model.PedidosubtotalInclTax) <strong>@T("Admin.Pedidos.Fields.PedidosubtotalInclTax")</strong>
                                    </div>
                                </div>
                            }
                            @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                            {
                                <div class="col-md-10">
                                    <div class="form-text-row">
                                        @Html.DisplayFor(model => model.PedidosubtotalExclTax) <strong>@T("Admin.Pedidos.Fields.PedidosubtotalExclTax")</strong>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                @if (((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax) && !String.IsNullOrEmpty(Model.PedidosubTotalDiscountInclTax)) ||
                    ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax) && !String.IsNullOrEmpty(Model.PedidosubTotalDiscountExclTax)))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            <div class="label-wrapper">
                                <label class="control-label">@T("Admin.Pedidos.Fields.PedidosubTotalDiscount")</label>
                                <div class="ico-help" title="@T("Admin.Pedidos.Fields.PedidosubTotalDiscount.Hint")">
                                    <i class="fa fa-question-circle"></i>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="row">
                                @if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax) && !String.IsNullOrEmpty(Model.PedidosubTotalDiscountInclTax))
                                {
                                    <div class="col-md-2">
                                        <div class="form-text-row">
                                            @Html.DisplayFor(model => model.PedidosubTotalDiscountInclTax) <strong>@T("Admin.Pedidos.Fields.PedidosubTotalDiscountInclTax")</strong>
                                        </div>
                                    </div>
                                }
                                @if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax) && !String.IsNullOrEmpty(Model.PedidosubTotalDiscountExclTax))
                                {
                                    <div class="col-md-10">
                                        <div class="form-text-row">
                                            @Html.DisplayFor(model => model.PedidosubTotalDiscountExclTax) <strong>@T("Admin.Pedidos.Fields.PedidosubTotalDiscountExclTax")</strong>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-3">
                        <div class="label-wrapper">
                            <label class="control-label">@T("Admin.Pedidos.Fields.Pedidoshipping")</label>
                            <div class="ico-help" title="@T("Admin.Pedidos.Fields.Pedidoshipping.Hint")">
                                <i class="fa fa-question-circle"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="row">
                            @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                            {
                                <div class="col-md-2">
                                    <div class="form-text-row">
                                        @Html.DisplayFor(model => model.PedidoshippingInclTax) <strong>@T("Admin.Pedidos.Fields.PedidoshippingInclTax")</strong>
                                    </div>
                                </div>
                            }
                            @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                            {
                                <div class="col-md-2">
                                    <div class="form-text-row">
                                        @Html.DisplayFor(model => model.PedidoshippingExclTax) <strong>@T("Admin.Pedidos.Fields.PedidoshippingExclTax")</strong>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                @if (((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax) && !String.IsNullOrEmpty(Model.PaymentMethodAdditionalFeeInclTax)) ||
                    ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax) && !String.IsNullOrEmpty(Model.PaymentMethodAdditionalFeeExclTax)))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            <div class="label-wrapper">
                                <label class="control-label">@T("Admin.Pedidos.Fields.PaymentMethodAdditionalFee")</label>
                                <div class="ico-help" title="@T("Admin.Pedidos.Fields.PaymentMethodAdditionalFee.Hint")">
                                    <i class="fa fa-question-circle"></i>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="row">
                                @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                                {
                                    <div class="col-md-2">
                                        <div class="form-text-row">
                                            @Html.DisplayFor(model => model.PaymentMethodAdditionalFeeInclTax) <strong>@T("Admin.Pedidos.Fields.PaymentMethodAdditionalFeeInclTax")</strong>
                                        </div>
                                    </div>
                                }
                                @if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                                {
                                    <div class="col-md-2">
                                        <div class="form-text-row">
                                            @Html.DisplayFor(model => model.PaymentMethodAdditionalFeeExclTax) <strong>@T("Admin.Pedidos.Fields.PaymentMethodAdditionalFeeExclTax")</strong>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (Model.DisplayTaxRates)
                {
                    foreach (var tr in Model.TaxRates)
                    {
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.NopLabelFor(model => model.Tax) <span style="padding-top: 7px;margin-right: 5px;float: right;">@tr.Rate%</span>
                            </div>
                            <div class="col-md-9">
                                @tr.Value
                            </div>
                        </div>
                    }
                }
                @if (Model.DisplayTax)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.Tax)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.Tax)
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.OrderTotalDiscount))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.OrderTotalDiscount)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.OrderTotalDiscount)
                        </div>
                    </div>
                }
                @foreach (var gc in Model.GiftCards)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.GiftCards[0].CouponCode)
                            <span style="padding-top: 7px;margin-right: 5px;float: right;">(@(gc.CouponCode))</span>
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplay(gc.Amount)
                        </div>
                    </div>
                }
                @if (Model.RedeemedRewardPoints > 0)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.RedeemedRewardPoints)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplay(Model.RedeemedRewardPoints + @T("Admin.Pedidos.Fields.RedeemedRewardPoints.Points").Text + "/" + Model.RedeemedRewardPointsAmount)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.OrderTotal)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDisplayFor(model => model.OrderTotal)
                    </div>
                </div>
                @if (!String.IsNullOrEmpty(Model.RefundedAmount))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.RefundedAmount)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.RefundedAmount)
                        </div>
                    </div>
                }
                @if (Model.UsedDiscounts.Count > 0)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.UsedDiscounts)
                        </div>
                        <div class="col-md-9">
                            @for (int i = 0; i < Model.UsedDiscounts.Count; i++)
                            {
                                var discount = Model.UsedDiscounts[i];
                                <a href="@Url.Action("Edit", "Discount", new {id = discount.DiscountId})">@discount.DiscountName</a>
                                if (i != Model.UsedDiscounts.Count - 1)
                                {
                                    <text>,</text>
                                }
                            }
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Profit)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDisplayFor(model => model.Profit)
                    </div>
                </div>
                <div id="trEditOrderTotals">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.PedidosubtotalInclTaxValue)
                        </div>
                        <div class="col-md-9">
                            <div class="pull-left margin-r-10">
                                @T("Admin.Pedidos.Fields.Edit.InclTax")
                                @Html.NopEditorFor(model => model.PedidosubtotalInclTaxValue)
                            </div>
                            <div class="pull-left">
                                @T("Admin.Pedidos.Fields.Edit.ExclTax")
                                @Html.NopEditorFor(model => model.PedidosubtotalExclTaxValue)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.PedidosubTotalDiscountInclTaxValue)
                        </div>
                        <div class="col-md-9">
                            <div class="pull-left margin-r-10">
                                @T("Admin.Pedidos.Fields.Edit.InclTax")
                                @Html.NopEditorFor(model => model.PedidosubTotalDiscountInclTaxValue)
                            </div>
                            <div class="pull-left">
                                @T("Admin.Pedidos.Fields.Edit.ExclTax")
                                @Html.NopEditorFor(model => model.PedidosubTotalDiscountExclTaxValue)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.PedidoshippingInclTaxValue)
                        </div>
                        <div class="col-md-9">
                            <div class="pull-left margin-r-10">
                                @T("Admin.Pedidos.Fields.Edit.InclTax")
                                @Html.NopEditorFor(model => model.PedidoshippingInclTaxValue)
                            </div>
                            <div class="pull-left">
                                @T("Admin.Pedidos.Fields.Edit.ExclTax")
                                @Html.NopEditorFor(model => model.PedidoshippingExclTaxValue)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.PaymentMethodAdditionalFeeInclTaxValue)
                        </div>
                        <div class="col-md-9">
                            <div class="pull-left margin-r-10">
                                @T("Admin.Pedidos.Fields.Edit.InclTax")
                                @Html.NopEditorFor(model => model.PaymentMethodAdditionalFeeInclTaxValue)
                            </div>
                            <div class="pull-left">
                                @T("Admin.Pedidos.Fields.Edit.ExclTax")
                                @Html.NopEditorFor(model => model.PaymentMethodAdditionalFeeExclTaxValue)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TaxRatesValue)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TaxRatesValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TaxValue)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.OrderTotalDiscountValue)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.OrderTotalDiscountValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.OrderTotalValue)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.OrderTotalValue)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="submit" name="btnEditOrderTotals" onclick="toggleOrderTotals(true);return false;" id="btnEditOrderTotals" class="btn btn-primary">
                            @T("Admin.Pedidos.Fields.EditOrderTotals")
                        </button>

                        <button type="submit" name="btnSaveOrderTotals" id="btnSaveOrderTotals" class="btn btn-primary">
                            @T("Admin.Pedidos.Fields.SaveOrderTotals")
                        </button>
                        @Html.ActionConfirmation("btnSaveOrderTotals")

                        <button type="submit" name="btnCancelOrderTotals" onclick="toggleOrderTotals(false);return false;" id="btnCancelOrderTotals" class="btn bg-teal">
                            @T("Admin.Common.Cancel")
                        </button>
                    </div>
                </div>
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardType)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardType">
                                @Html.NopDisplayFor(model => model.CardType)
                            </div>
                            @Html.NopEditorFor(model => model.CardType)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardName)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardName">
                                @Html.NopDisplayFor(model => model.CardName)
                            </div>
                            @Html.NopEditorFor(model => model.CardName)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber || !String.IsNullOrEmpty(Model.CardNumber))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardNumber)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardNumber">
                                @Html.NopDisplayFor(model => model.CardNumber)
                            </div>
                            @Html.NopEditorFor(model => model.CardNumber)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardCvv2)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardCvv2">
                                @Html.NopDisplayFor(model => model.CardCvv2)
                            </div>
                            @Html.NopEditorFor(model => model.CardCvv2)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardExpirationMonth)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardExpirationMonth">
                                @Html.NopDisplayFor(model => model.CardExpirationMonth)
                            </div>
                            @Html.NopEditorFor(model => model.CardExpirationMonth)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CardExpirationYear)
                        </div>
                        <div class="col-md-9">
                            <div id="lblCardExpirationYear">
                                @Html.NopDisplayFor(model => model.CardExpirationYear)
                            </div>
                            @Html.NopEditorFor(model => model.CardExpirationYear)
                        </div>
                    </div>
                }
                @if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">
                            <button type="submit" name="btnEditCC" onclick="toggleCC(true);return false;" id="btnEditCC" class="btn btn-primary">
                                @T("Admin.Pedidos.Fields.EditCC")
                            </button>

                            <button type="submit" name="btnSaveCC" id="btnSaveCC" class="btn btn-primary">
                                @T("Admin.Pedidos.Fields.SaveCC")
                            </button>
                            @Html.ActionConfirmation("btnSaveCC")

                            <button type="submit" name="btnCancelCC" onclick="toggleCC(false);return false;" id="btnCancelCC" class="btn bg-teal">
                                @T("Admin.Common.Cancel")
                            </button>
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.AuthorizationTransactionId))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.AuthorizationTransactionId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.AuthorizationTransactionId)
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.CaptureTransactionId))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CaptureTransactionId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.CaptureTransactionId)
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.SubscriptionTransactionId))
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.SubscriptionTransactionId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDisplayFor(model => model.SubscriptionTransactionId)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.PaymentMethod)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDisplayFor(model => model.PaymentMethod)
                    </div>
                </div>
        </div>
    </div>
    }
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.PaymentStatus)
                </div>
                <div class="col-md-9">
                    @Html.NopDisplayFor(model => model.PaymentStatus)
                </div>
            </div>
            @if (Model.CanCapture || Model.CanMarkOrderAsPaid || Model.CanRefund || Model.CanRefundOffline ||
                Model.CanPartiallyRefund || Model.CanPartiallyRefundOffline || Model.CanVoid || Model.CanVoidOffline)
            {
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        @if (!Model.IsLoggedInAsVendor)
                        {
                            if (Model.CanCapture)
                            {
                                <button type="submit" name="captureorder" id="captureorder" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.Capture")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("captureorder")
                            }
                            if (Model.CanMarkOrderAsPaid)
                            {
                                <button type="submit" name="markorderaspaid" id="markorderaspaid" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.MarkAsPaid")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("markorderaspaid")
                            }
                            if (Model.CanRefund)
                            {
                                <button type="submit" name="refundorder" id="refundorder" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.Refund")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("refundorder")
                            }
                            if (Model.CanRefundOffline)
                            {
                                <button type="submit" name="refundorderoffline" id="refundorderoffline" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.RefundOffline")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("refundorderoffline")
                            }
                            if (Model.CanPartiallyRefund)
                            {
                                <button type="submit" id="partiallyrefundorder" name="partiallyrefundorder" onclick="javascript:OpenWindow('@(Url.Action("PartiallyRefundOrderPopup", "Order", new {id = Model.Id, online = true, btnId = "btnRefreshPage", formId = "order-form"}))', 500, 300, true); return false;" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.PartialRefund")
                                </button>
                                <text>&nbsp;</text>
                            }
                            if (Model.CanPartiallyRefundOffline)
                            {
                                <button type="submit" id="partiallyrefundorderoffline" name="partiallyrefundorderoffline" onclick="javascript:OpenWindow('@(Url.Action("PartiallyRefundOrderPopup", "Order", new {id = Model.Id, online = false, btnId = "btnRefreshPage", formId = "order-form"}))', 500, 300, true); return false;" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.PartialRefundOffline")
                                </button>
                                <text>&nbsp;</text>
                            }
                            if (Model.CanVoid)
                            {
                                <button type="submit" name="voidorder" id="voidorder" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.Void")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("voidorder")
                            }
                            if (Model.CanVoidOffline)
                            {
                                <button type="submit" name="voidorderoffline" id="voidorderoffline" class="btn btn-primary">
                                    @T("Admin.Pedidos.Fields.VoidOffline")
                                </button>
                                <text>&nbsp;</text>
                                @Html.ActionConfirmation("voidorderoffline")
                            }
                        }
                    </div>
                </div>
            }
            @if (Model.CustomValues != null && Model.CustomValues.Count > 0)
            {
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CustomValues)
                    </div>
                    <div class="col-md-9">
                        <div class="form-text-row">
                            @foreach (var item in Model.CustomValues)
                            {
                                <ul class="common-list">
                                    <li>
                                        @item.Key: @(item.Value != null ? item.Value.ToString() : "")
                                    </li>
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CreatedOn)
                </div>
                <div class="col-md-9">
                    @Html.NopDisplayFor(model => model.CreatedOn)
                </div>
            </div>
        </div>
    </div>
</div>